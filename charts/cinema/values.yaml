# Default values for cinema.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### Mongodb values ###
mongodb:
  # define if use mongodb dependency
  enabled: true

  replicaCount: 2


  configuration: |-
    replication:
      replSetName: rs0 
      enableMajorityReadConcern: true
    storage:
      dbPath: /bitnami/mongodb/data/db
      journal:
        enabled: true
      directoryPerDB: false
     # where to write logging data
    systemLog:
      destination: file
      quiet: false
      logAppend: true
      logRotate: reopen
      path: /opt/bitnami/mongodb/logs/mongodb.log
      verbosity: 0
    # network interfaces
    net:
      port: 27017
      unixDomainSocket:
        enabled: true
        pathPrefix: /opt/bitnami/mongodb/tmp
      ipv6: false
      bindIpAll: true

    processManagement:
       fork: false
       pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
    # set parameter options
    setParameter:
      enableLocalhostAuthBypass: true
    # security options
    security:
      authorization: disabled
      #keyFile: /opt/bitnami/mongodb/conf/keyfile

  replicaSetConfigurationSettings:
    enabled: true
    configuration: 
      chainingAllowed: false
      heartbeatTimeoutSecs: 10
      heartbeatIntervalMillis: 2000
      electionTimeoutMillis: 10000
      catchUpTimeoutMillis: 30000

  rbac:
   create: true 

  externalAccess:
    autoDiscovery: 
      enabled: true
    enabled: true
    service:
      type: LoadBalancer
      port: 27017 

  auth:
    enabled: false
    usernames: ["root"]
    databases: ["hello"]
 
  persistence:
    enabled: true 

  architecture: replicaset 

  podAnnotations:
    sidecar.istio.io/inject: "false"

  annotations:
    sidecar.istio.io/inject: "false"

  extraDeploy:
## This needs to be uncommented and added to 'extraDeploy' in order to use the replicaset 'mongo-labeler' sidecar
## for dynamically discovering the mongodb primary pod
## suggestion is to use a hard-coded and predictable TCP port for the primary mongodb pod (here is 30001, choose your own)
    - apiVersion: v1
      kind: Service
      metadata:
        name: mongodb-primary
        namespace: cinema
        labels:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: mongodb
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mongodb
      spec:
        type: NodePort
        externalTrafficPolicy: Cluster
        ports:
          - name: mongodb
            port: 30001
            nodePort: 30001
            protocol: TCP
            targetPort: mongodb
        selector:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: mongodb
          app.kubernetes.io/name: mongodb
          primary: "true"

# Cinema website values
website:
  image:
    repository: ghcr.io/autotune/microservices-docker-go-mongodb-tf/website
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.1.16"

  imagePullSecrets:  [
    name: docker-login
  ]

  args:
    - "-usersAPI"
    - "http://cinema-users/api/users/"
    - "-moviesAPI"
    - "http://cinema-movies/api/movies/"
    - "-showtimesAPI"
    - "http://cinema-showtimes/api/showtimes/"
    - "-bookingsAPI"
    - "http://cinema-bookings/api/bookings/"

# Cinema users values
users:
  image:
    repository: ghcr.io/autotune/microservices-docker-go-mongodb-tf/users
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.1.16"

  imagePullSecrets:  [
    name: docker-login
  ]

  args:
    - "-mongoURI"
    - "mongodb://cinema-mongodb:27017/"

# Cinema movies values
movies:
  image:
    repository: ghcr.io/autotune/microservices-docker-go-mongodb-tf/movies
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.1.16"

  imagePullSecrets:  [
    name: docker-login
  ]

  args:
    - "-mongoURI"
    - "mongodb://cinema-mongodb:27017/"

# Cinema showtimes values
showtimes:
  image:
    repository: ghcr.io/autotune/microservices-docker-go-mongodb-tf/showtimes
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.1.16"

  imagePullSecrets:  [
    name: docker-login
  ]

  args:
    - "-mongoURI"
    - "mongodb://cinema-mongodb:27017/"

# Cinema bookings values
bookings:
  image:
    repository: ghcr.io/autotune/microservices-docker-go-mongodb-tf/bookings
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.1.19"

  imagePullSecrets: [ 
    name: docker-login
   ]
  

  args:
    - "-mongoURI"
    - "mongodb://cinema-mongodb:27017/"
