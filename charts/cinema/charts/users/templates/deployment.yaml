apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "users.fullname" . }}
  labels:
    {{- include "users.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "users.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "users.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "users.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /api/users/
              port: 4000
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 70
            timeoutSeconds: 60
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /api/users/
              port: 4000
            initialDelaySeconds: 70
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 60
          env:
            - name: MONGODB_USERNAME
              value: "mms-automation"
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-replica-set-agent-password
                  key: password
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: "~/.dockercfg"
              name: dockerconfig
              readOnly: true
          args:
            {{- toYaml .Values.args | nindent 12 }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-auth
                  key: username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-auth
                  key: password

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
       - name: dockerconfig
         secret:
           secretName: docker-login
